# A friendly name for the workflow, displayed in the GitHub Actions UI.
name: Build & Push Docker image to Docker Hub

# Defines the events that trigger this workflow.
on:
  # Allows manual triggering from the Actions tab with an optional tag input.
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker Tag'
        required: false
        default: 'latest'
        type: string

  # Triggers on pushes to the main or master branches.
  push:
    branches: [ main, master ]

  # Triggers on pull requests targeting the main or master branches.
  pull_request:
    branches: [ main, master ]

# Defines a global environment variable for the Docker image name.
# This avoids repetition and makes future updates easier.
env:
  # MODIFIED: Image name changed to Docker Hub format.
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/shiyutv

# Concurrency settings to ensure only one run of this workflow per branch is active at a time.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Specifies the permissions required by the jobs in this workflow.
permissions:
  # MODIFIED: Removed 'packages: write' as it's for GHCR.
  contents: write
  actions: write

# Contains the jobs to be executed.
jobs:
  # The 'build' job builds the Docker image for multiple architectures in parallel.
  build:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            os: ubuntu-latest
          - platform: linux/arm64
            os: ubuntu-24.04-arm  # Using a native ARM runner for better performance.
    runs-on: ${{ matrix.os }}

    steps:
      - name: Prepare platform name
        id: prep_platform
        run: echo "PLATFORM_NAME=${{ matrix.platform }}" | sed 's|/|-|g' >> $GITHUB_ENV

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        # MODIFIED: Login now uses Docker Hub secrets you created.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          # The tags logic is kept identical to the original file.
          tags: |
            type=raw,value=${{ github.event.inputs.tag || 'latest' }},enable={{is_default_branch}}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          # The tag is constructed using the environment variable for the image name.
          tags: ${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag || 'latest' }}
          # Pushes the architecture-specific image layer and outputs its digest.
          outputs: type=image,name=${{ env.IMAGE_NAME }},name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest as artifact
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_NAME }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  # The 'merge' job runs after all 'build' jobs are complete. It creates the multi-arch manifest.
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download all architecture digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        # MODIFIED: Login now uses Docker Hub secrets you created.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          # Uses the IMAGE_NAME env var and combines all downloaded digests into a single manifest list.
          docker buildx imagetools create -t ${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag || 'latest' }} \
            $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)

  # The 'cleanup' job runs after 'merge' to keep the Actions history clean.
  cleanup-refresh:
    runs-on: ubuntu-latest
    needs:
      - merge
    # 'if: always()' ensures this job runs even if a previous job fails.
    if: always()
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2
