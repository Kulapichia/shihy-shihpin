# 工作流名称
name: Build & Push Docker image to Docker Hub

# 触发条件
on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch: # 允许手动触发

# 环境变量
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/shiyutv
  REGISTRY: docker.io

# 任务定义
jobs:
  # 统一的多平台构建与推送任务
  build-and-push-multi-platform:
    name: 🚀 Build & Push Multi-Platform Image
    runs-on: ubuntu-latest # 使用单一的运行环境

    steps:
      # 1. 检出代码
      - name: 📥 Checkout source code
        uses: actions/checkout@v4

      # 2. 设置 QEMU (用于跨平台构建)
      - name: ⚙️ Setup QEMU
        uses: docker/setup-qemu-action@v3

      # 3. 设置 Docker Buildx (现代化的构建工具)
      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. 登录到 Docker Hub
      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. 提取元数据 (自动生成标签)
      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            # 始终包含 latest 标签
            type=raw,value=latest,enable={{is_default_branch}}

      # 6. 核心步骤: 构建并推送多平台镜像
      - name: 🚀 Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          # 在这里一次性指定所有平台
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # 统一的缓存策略，提升构建速度
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 7. 清理工作流运行记录 (可选，保持整洁)
      - name: 🧹 Cleanup workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 2
