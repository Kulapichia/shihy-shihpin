name: Build & Push Docker image to Docker Hub

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker Tag (e.g., latest, v1.2.3)'
        required: false
        default: 'latest'
        type: string
      force_rebuild:
        description: 'Force rebuild without using cache'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/shiyutv
  REGISTRY: docker.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


permissions:
  contents: write # 'write' 权限对于某些 metadata-action 功能（如git tag）是必要的
  actions: write # 用于清理旧的 workflow runs
  packages: write # 'write' 权限是推送镜像到 GHCR 所需，对于 Docker Hub 也是推荐的最佳实践

jobs:
  build-and-push:
    name: 🚀 Build & Push Multi-Platform Image
    runs-on: ubuntu-latest
    
    steps:
      - name: ⚡ Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get clean
          df -h

      - name: 📥 Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Node.js 构建环境
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
      - name: 📦 Install dependencies
        run: pnpm install
      - name: 📜 Generate version and changelog
        run: node scripts/convert-changelog.js

      # Docker 环境
      - name: 🎯 Setup QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: 🔧 Setup Docker Buildx for advanced features
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:buildx-stable-1
            network=host

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- 极大地增强了 metadata-action 功能 ---
      - name: 🏷️ Extract intelligent Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # 手动触发时，使用输入的 tag，如果为空则默认为 'latest'
            type=raw,value=${{ github.event.inputs.tag || 'latest' }},enable=${{ github.event_name == 'workflow_dispatch' }}
            # 当推送到 main 或 master 分支时，自动打上 'latest' 标签
            type=ref,event=branch,pattern=main,value=latest
            type=ref,event=branch,pattern=master,value=latest
            # 为每一次构建都生成一个基于 commit SHA 的唯一标签，如 sha-7d1a7a2
            type=sha,prefix=sha-,format=short

      # 核心构建 - 统一原子操作，增强缓存策略
      - name: 🚀 Build and push multi-platform image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          # 只在非 pull_request 事件时推送
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # 增强缓存策略 - 多架构特定缓存
          cache-from: |
            type=gha,scope=multiarch-${{ github.workflow }}
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-multiarch
          cache-to: |
            type=gha,mode=max,scope=multiarch-${{ github.workflow }}
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-multiarch,mode=max
          # force_rebuild 时禁用缓存
          no-cache: ${{ github.event.inputs.force_rebuild == 'true' }}
          # 性能优化配置
          provenance: false
          sbom: false
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # --- 移除了冗余的 outputs 字段 ---
          # 'push: true' 已包含此功能，无需重复声明

  # 清理任务
  cleanup:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: always()
    steps:
      - name: 🧹 Cleanup workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          # --- 稍微放宽清理策略，更安全 ---
          retain_days: 2
          keep_minimum_runs: 3
