# 工作流的友好名称，会显示在 GitHub Actions 的 UI 中。
name: Build & Push Docker image to Docker Hub

# 定义触发此工作流的事件。
on:
  # 允许从 Actions 标签页手动触发，并可选择性输入 tag。
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker Tag'
        required: false
        default: 'latest'
        type: string

  # 在 main 或 master 分支有 push 时触发。
  push:
    branches: [ main, master ]

  # 在目标为 main 或 master 分支的 pull request 时触发。
  pull_request:
    branches: [ main, master ]

# 定义全局环境变量，方便统一管理镜像名称。
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/shiyutv

# 并发设置，确保每个分支同一时间只有一个工作流在运行。
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 指定工作流中任务所需的权限。
permissions:
  contents: write
  actions: write

# 包含要执行的任务。
jobs:
  # 一个单一的任务，用于构建并推送多架构镜像。
  build-and-push:
    runs-on: ubuntu-latest # <-- 我们在标准的运行器上执行所有操作。
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # (新增) 设置 QEMU 以支持多架构构建。
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for labels and tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.tag || 'latest' }},enable={{is_default_branch}}

      - name: Build and push multi-platform image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          # (修改) 在这里用逗号分隔，指定所有需要构建的平台。
          platforms: linux/amd64,linux/arm64 
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          # 这一行告诉 Action 在构建成功后推送到仓库。
          push: true
          # 使用缓存来加速未来的构建
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # 清理任务可以保持不变。
  cleanup-refresh:
    runs-on: ubuntu-latest
    # (修改) 它现在只需要等待唯一的 'build-and-push' 任务完成。
    needs:
      - build-and-push
    if: always()
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2
